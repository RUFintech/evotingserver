# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

volumes:
  orderer0.example.com:
  orderer1.example.com:
  peer0.org1.example.com:
  peer1.org1.example.com:

networks:
  byfn:
    
services:

  ca.org1.example.com:
    image: hyperledger/fabric-ca:latest
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.org1.example.com
      - FABRIC_CA_SERVER_CSR_CN=ca.org1.example.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.example.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/1518691297de23d4e865ad316bc989d1a1cbe2f8255d3c5afdb7b951ee05f03d_sk
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/1518691297de23d4e865ad316bc989d1a1cbe2f8255d3c5afdb7b951ee05f03d_sk
    ports:
      - "7054:7054"
    # command: bash
    command: sh -c 'fabric-ca-server start --ca.certfile $${FABRIC_CA_SERVER_CA_CERTFILE} --ca.keyfile $${FABRIC_CA_SERVER_CA_KEYFILE} -b Admin:adminpw '
    # command: sh -c 'fabric-ca-server start -b Admin:adminpw '
    volumes:
      - ./crypto-config/peerOrganizations/org1.example.com/ca:/etc/hyperledger/fabric-ca-server-config
      - ./crypto-config/peerOrganizations/org1.example.com:/etc/hyperledger/fabric-ca-server-config
    container_name: ca.org1.example.com
    networks:
      - byfn

  orderer0.example.com:
    extends:
      file:   base/docker-compose-base.yml
      service: orderer0.example.com
    container_name: orderer0.example.com
    depends_on:
      - kafka0.example.com
      - kafka1.example.com
      - kafka2.example.com
      - kafka3.example.com  
    networks:
      - byfn
      
  orderer1.example.com:
    extends:
      file:   base/docker-compose-base.yml
      service: orderer1.example.com
    container_name: orderer1.example.com
    depends_on:
      - kafka0.example.com
      - kafka1.example.com
      - kafka2.example.com
      - kafka3.example.com  
    networks:
      - byfn      

  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    extends:
      file:  base/docker-compose-base.yml
      service: peer0.org1.example.com
    networks:
      - byfn      

  peer1.org1.example.com:
    container_name: peer1.org1.example.com
    extends:
      file:  base/docker-compose-base.yml
      service: peer1.org1.example.com
    networks:
      - byfn      

  zookeeper0.example.com:
    container_name: zookeeper0.example.com
    extends:
      file: base/docker-compose-base.yml
      service: zookeeper0.example.com
    networks:
      - byfn      

  zookeeper1.example.com:
    container_name: zookeeper1.example.com
    extends:
      file: base/docker-compose-base.yml
      service: zookeeper1.example.com
    networks:
      - byfn      

  zookeeper2.example.com:
    container_name: zookeeper2.example.com
    extends:
      file: base/docker-compose-base.yml
      service: zookeeper2.example.com
    networks:
      - byfn      

  kafka0.example.com:
    container_name: kafka0.example.com
    extends:
      file: base/docker-compose-base.yml
      service: kafka0.example.com
    networks:
      - byfn         
    depends_on:
      - zookeeper0.example.com
      - zookeeper1.example.com
      - zookeeper2.example.com

  kafka1.example.com:
    container_name: kafka1.example.com
    extends:
      file: base/docker-compose-base.yml
      service: kafka1.example.com
    networks:
      - byfn         
    depends_on:
      - zookeeper0.example.com
      - zookeeper1.example.com
      - zookeeper2.example.com

  kafka2.example.com:
    container_name: kafka2.example.com
    extends:
      file: base/docker-compose-base.yml
      service: kafka2.example.com
    networks:
      - byfn         
    depends_on:
      - zookeeper0.example.com
      - zookeeper1.example.com
      - zookeeper2.example.com

  kafka3.example.com:
    container_name: kafka3.example.com
    extends:
      file: base/docker-compose-base.yml
      service: kafka3.example.com
    networks:
      - byfn         
    depends_on:
      - zookeeper0.example.com
      - zookeeper1.example.com
      - zookeeper2.example.com

  cli:
    container_name: cli
    image: hyperledger/fabric-tools:latest
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=example.com
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    #command: /bin/bash -c 'sleep 1000'
    volumes:
        - /var/run/:/host/var/run/
        - ./examples/chaincode/:/opt/gopath/src/github.com/chaincode
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    networks:
      - byfn
    depends_on:
      - orderer0.example.com
      - orderer1.example.com
      - peer0.org1.example.com
      - peer1.org1.example.com